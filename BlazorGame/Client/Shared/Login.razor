@inject ILocalStorageService LocalStorageService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IAuthService AuthService
@inject IToastService ToastService

Please log in below or <a href="@nameof(Register)">register</a> for a new account.

<EditForm Model="user" OnValidSubmit="HandleLogin">
  <DataAnnotationsValidator/>
  <div class="form-group mb-3 col-sm-3">
    <label for="username" class="form-label">Username</label>
    <InputText id="username" class="form-control" @bind-Value="user.Email"></InputText>
  </div>
  <div class="form-group mb-3 col-sm-3">
    <label for="password" class="form-label">Password</label>
    <InputText id="password" type="password" class="form-control" @bind-Value="user.Password"></InputText>
  </div>
  <button type="submit" class="btn btn-primary">Login</button>
  <ValidationSummary/>
</EditForm>

@code {
  private readonly UserLogin user = new();

  private async Task HandleLogin()
  {
    var result = await AuthService.Login(user);
    if (result.Success)
    {
      await LocalStorageService.SetItemAsync(Constants.AuthToken, result.Data);
      await AuthenticationStateProvider.GetAuthenticationStateAsync();
    }
    else
    {
      ToastService.ShowError(result.Message);
    }
  }
}
