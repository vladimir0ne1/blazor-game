@page "/leaderboard"
@inject ILeaderboardService LeaderboardService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IBattleService BattleService
@inject IBananaService BananaService
@inject IToastService ToastService
@inject NavigationManager NavigationManager

<h3>Leaderboard</h3>

@if (LeaderboardService.Leaderboard == null)
{
  <span>Loading leaderboard...</span>
}
else
{
  <table class="table">
    <thead>
    <tr>
      <th>#</th>
      <th>User</th>
      <th>Victories</th>
      <th>Defeats</th>
      <th>Battles</th>
      <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var entry in LeaderboardService.Leaderboard)
    {
      <tr style="@GetMyStyle(entry.UserId)">
        <td>@entry.Rank</td>
        <td>@entry.UserName</td>
        <td>@entry.Victories</td>
        <td>@entry.Defeats</td>
        <td>@entry.Battles</td>
        <td>
          @if (entry.UserId != myUserId)
          {
            <button class="btn btn-primary" onclick="@(() => StartBattle(entry.UserId))">
              Fight
            </button>
          }
        </td>
      </tr>
    }
    </tbody>
  </table>
}
@code {
  int myUserId;
  /// <inheritdoc />
  protected override async Task OnInitializedAsync()
  {
    await LeaderboardService.GetLeaderboard();
    var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
    myUserId = int.Parse(authState.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value);
  }

  public string GetMyStyle(int userId)
  {
    return userId == myUserId ? "color: green; font-weight: 600;" : string.Empty;
  }

  public async Task StartBattle(int opponentId)
  {
    Console.WriteLine($"Start battle with {opponentId}");

    var result = await BattleService.StartBattle(opponentId);

    if (result.RoundsFought <= 0)
    {
      ToastService.ShowInfo("The battle did not take place.");
    }
    else if (result.IsVictory)
    {
      ToastService.ShowSuccess("You won the battle!");
    }
    else
    {
      ToastService.ShowError("YYou have been destroyed!");
    }

    await LeaderboardService.GetLeaderboard();
    await BananaService.GetBananas();

    if (result.RoundsFought > 0)
    {
      NavigationManager.NavigateTo("battlelog");
    }
  }
}
